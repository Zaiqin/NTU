		;		Calling program
Num1		DCD		0x20			; 32
Num2		DCD		0x14			; 20
Result	DCD		0
		ADR		SP, 0xFFFFFFFC	; Initialise stack pointer(SP) to top of memory
		MOV		R0, #0x100	;
		LDR		R1, [R0], #4
		STR		R1, [SP,#-4]!	; (a) Push value at memory variable Num1 to stack
		LDR		R1, [R0], #4
		STR		R1, [SP,#-4]!	; (b) Push value at memory variable Num2 to stack
		STR		R0, [SP,#-4]!	; (c) Push address at memory variable Result to stack
		BL		Mean			; Call subroutine Mean
		ADD		SP, SP, #12	; (h) Remove the 3 parameters push to the stack earlier
		END		; Stop emulation
		
		;Subroutine	Mean
Mean		STMFD	SP!,{R0-R2}	; Save R0 to R2 to stack
		LDR		R0, [SP, #20]	; (d) Move value of Num1 that is on the stack into R0
		LDR		R1, [SP, #16]	; (e) Move value of Num2 that is on the stack into R1
		ADD		R0, R0, R1	; Add R1 to R0
		ASR		R0, R0, #1	; Divide by 2 using arithmetic shift right by 1 bit
		LDR		R2, [SP, #12]	; (f) Move address of Result that is on stack into R2
		STR		R0, [R2]		; (g) Move result in R0 into memory variable Result
		LDMFD	SP!,{R0-R2}	; Restore R0 to R2 from stack
		MOV		PC, LR		; Return to calling program
